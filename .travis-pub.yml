services: docker
sudo: required
dist: xenial

language: go
go:
  - 1.13.x

env:
  global:
    - REPO_OWNER=$(dirname $TRAVIS_REPO_SLUG)
    # REPO_NAME should normally be 'ibm-spectrum-scale-csi'
    - REPO_NAME=$(basename $TRAVIS_REPO_SLUG)
    - REPO_NAME_DRIVER="${REPO_NAME}-driver"
    - REPO_NAME_OPERATOR="${REPO_NAME}-operator"
   
    # Grab quay username from 'user+bot_token'
    - IMAGE_REPO_OWNER=${QUAY_BOT_USERNAME%%\+*}
    # Format quay image target
    - IMAGE_REPO_DRIVER=quay.io/${IMAGE_REPO_OWNER}/${REPO_NAME_DRIVER}
    - IMAGE_REPO_OPERATOR=quay.io/${IMAGE_REPO_OWNER}/${REPO_NAME_OPERATOR}
    # Add image tag
    - IMAGE_TAG=$( 
        if [[ $TRAVIS_EVENT_TYPE == 'cron' ]]; 
        then 
            echo "nightly-${TRAVIS_BUILD_ID}-`date -u +%F`"; 
        else
            echo $TRAVIS_BRANCH; 
        fi
      )
    # Add image repo and tag
    - IMAGE_FQN_DRIVER=${IMAGE_REPO_DRIVER}:${IMAGE_TAG}
    - IMAGE_FQN_OPERATOR=${IMAGE_REPO_OPERATOR}:${IMAGE_TAG}
    - IMAGE_VERSION=${IMAGE_TAG}
    # Add image label to expire nightlies
    - IMAGE_LABEL=$(
        if [[ $TRAVIS_EVENT_TYPE == 'cron' ]];
        then
            echo "--label version=${IMAGE_VERSION} --label quay.expires-after=2w";
        else
            echo "--label version=${IMAGE_VERSION}";
        fi
      )
    - BUILD_DIR_OPERATOR="${TRAVIS_BUILD_DIR}/operator"
    - BUILD_DIR_DRIVER="${TRAVIS_BUILD_DIR}/driver"


    - PATH=/opt/python/3.6.7/bin:$PATH
    - GO111MODULE=on
    - KUBE_VERSION="v1.16.2"
    - OP_VER="v0.11.0"
  
    - LOCAL_IMAGE="csi.ibm.com/ibm-spectrum-scale-csi-operator:testing"
    - OPERATOR_SDK="https://github.com/operator-framework/operator-sdk/releases/download/${OP_VER}/operator-sdk-${OP_VER}-x86_64-linux-gnu"
    - OLM_MANIFEST="${BUILD_DIR_OPERATOR}/deploy/olm-catalog/${REPO_NAME_OPERATOR}/"

    - CHANGE_MINIKUBE_NONE_USER=true
    - MINIKUBE_WANTUPDATENOTIFICATION=false
    - MINIKUBE_WANTREPORTERRORPROMPT=false
    - MINIKUBE_HOME=$HOME
    - KUBECONFIG=$HOME/.kube/config

addons:
  apt:
    packages:
      - "python3"
      - "python3-dev"
      - "python3-pip" 
stages:
  - lint
  - build
  - test
jobs:
  fast_finish: true
  include:
    
    # Install operator-courier and run the lint on the manifest.
    - stage:  precheck 
      name: "Precheck: Run linters and bundle automation."
      script:
        - pip install ansible
        # Testing that the generated files match the deploy/*.yaml files, it they do not match, fail Travis
        - ansible-playbook ${TRAVIS_BUILD_DIR}/tools/ansible/generate-playbook.yaml --extra-vars "travis_testing=true"
        - pip install operator-courier
        - cd ${CSI_OP_BUILD_DIR}
        - python hacks/package_operator.py -d ${OLM_MANIFEST}  -o /tmp/operator --nozip 
        - operator-courier --verbose verify --ui_validate_io /tmp/operator

    - stage: build
      name: "Build: operator"
      script:
        - sudo pip install docker
        - docker version
        - ${TRAVIS_BUILD_DIR}/tools/scripts/ci/install_operator-sdk.sh
        - cd ${CSI_OP_BUILD_DIR}
        - operator-sdk version
        - go version
        - operator-sdk build ${REPO_NAME_OPERATOR}
        - docker tag ${REPO_NAME_OPERATOR} ${IMAGE_FQN_OPERATOR}
          #- 'if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then echo "$QUAY_BOT_PASSWORD" | docker login -u "$QUAY_BOT_USERNAME" --password-stdin  quay.io; docker push ${DOCKER_REPO}; fi'
    - name: "Build: docs"
      script:
        - pip install sphinx sphinx_rtd_theme recommonmark 
        - cd ${TRAVIS_BUILD_DIR}/docs
        - make html


    # Install minikube, build the image and run the scorecard.
    - stage: test
      name: "Test: scorecard"
      before_install:
        - sudo pip install docker
        - pip install openshift
        - ${TRAVIS_BUILD_DIR}/tools/scripts/ci/install_minikube.sh
        - ${TRAVIS_BUILD_DIR}/tools/scripts/ci/install_operator-sdk.sh
        - kubectl version
        - cd ${CSI_OP_BUILD_DIR}
        - eval $(minikube docker-env) # Popping this out, because I don't think the script is working.
        - operator-sdk build ${REPO_NAME_OPERATOR}
        - docker tag ${REPO_NAME_OPERATOR} ${IMAGE_FQN_OPERATOR}
      script: 
        # Print environment 
        # Build the image, clear and restore the finalizers.
        - python hacks/clear_finalizers.py
        - python hacks/change_deploy_image.py -i ${IMAGE_FQN_OPERATOR} --ifnotpresent
        - kubectl create -f deploy/namespace.yaml
        - operator-sdk scorecard --config .osdk-scorecard.yaml
        - python hacks/clear_finalizers.py --restore
        
    - before_install:
        - sudo pip install docker
        - pip install pyyaml molecule openshift docker jmespath kubernetes-validate
        - ${TRAVIS_BUILD_DIR}/tools/scripts/ci/install_minikube.sh
        - ${TRAVIS_BUILD_DIR}/tools/scripts/ci/install_operator-sdk.sh
        - kubectl version
        - cd ${CSI_OP_BUILD_DIR}
        - eval $(minikube docker-env) # Popping this out, because I don't think the script is working.
        - operator-sdk build ${REPO_NAME_OPERATOR}
        - docker tag ${REPO_NAME_OPERATOR} ${LOCAL_IMAGE}
      name: "Test: molecule"
      script: 
        #  This needs to be built before we can test with molecule for reasons.
        - python hacks/change_deploy_image.py -i ${LOCAL_IMAGE} --ifnotpresent
        - kubectl create -f deploy/namespace.yaml
        - molecule test -s test-local

          #- ${TRAVIS_BUILD_DIR}/tools/scripts/ci/fold_ouput.sh cluster.info.2 "cluster information"  kubectl cluster-info dump
notifications:
  email: false